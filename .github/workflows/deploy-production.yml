name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: learning-llmops-platform
  REGION: ${{ secrets.GCP_REGION }}
  ARTIFACT_REPO: llmops-platform
  REGISTRY_HOST: us-docker.pkg.dev

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker $REGISTRY_HOST

      - name: Fetch secrets from Secret Manager
        id: secrets
        run: |
          # Função para buscar secret
          fetch_secret() { gcloud secrets versions access latest --secret="$1"; }

          echo "VITE_FIREBASE_API_KEY=$(fetch_secret VITE_FIREBASE_API_KEY)" >> $GITHUB_ENV
          echo "VITE_FIREBASE_AUTH_DOMAIN=$(fetch_secret VITE_FIREBASE_AUTH_DOMAIN)" >> $GITHUB_ENV
          echo "VITE_FIREBASE_PROJECT_ID=$(fetch_secret VITE_FIREBASE_PROJECT_ID)" >> $GITHUB_ENV
          echo "VITE_FIREBASE_STORAGE_BUCKET=$(fetch_secret VITE_FIREBASE_STORAGE_BUCKET)" >> $GITHUB_ENV
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=$(fetch_secret VITE_FIREBASE_MESSAGING_SENDER_ID)" >> $GITHUB_ENV
          echo "VITE_FIREBASE_APP_ID=$(fetch_secret VITE_FIREBASE_APP_ID)" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build \
            --build-arg VITE_FIREBASE_API_KEY="$VITE_FIREBASE_API_KEY" \
            --build-arg VITE_FIREBASE_AUTH_DOMAIN="$VITE_FIREBASE_AUTH_DOMAIN" \
            --build-arg VITE_FIREBASE_PROJECT_ID="$VITE_FIREBASE_PROJECT_ID" \
            --build-arg VITE_FIREBASE_STORAGE_BUCKET="$VITE_FIREBASE_STORAGE_BUCKET" \
            --build-arg VITE_FIREBASE_MESSAGING_SENDER_ID="$VITE_FIREBASE_MESSAGING_SENDER_ID" \
            --build-arg VITE_FIREBASE_APP_ID="$VITE_FIREBASE_APP_ID" \
            -t $REGISTRY_HOST/$PROJECT_ID/$ARTIFACT_REPO/$SERVICE_NAME:$GITHUB_SHA \
            -t $REGISTRY_HOST/$PROJECT_ID/$ARTIFACT_REPO/$SERVICE_NAME:latest .

      - name: Push Docker image to Artifact Registry
        run: |
          docker push $REGISTRY_HOST/$PROJECT_ID/$ARTIFACT_REPO/$SERVICE_NAME:$GITHUB_SHA
          docker push $REGISTRY_HOST/$PROJECT_ID/$ARTIFACT_REPO/$SERVICE_NAME:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $REGISTRY_HOST/$PROJECT_ID/$ARTIFACT_REPO/$SERVICE_NAME:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 10 \
            --port 8080 \
            --set-env-vars "NODE_ENV=production"

      - name: Get Service URL
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME \
            --platform managed \
            --region $REGION \
            --format 'value(status.url)')
          echo "Service deployed to: $SERVICE_URL"
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV

      - name: Test deployment
        run: |
          sleep 10
          curl -f $SERVICE_URL/health || exit 1
          echo "✓ Deployment successful and healthy!"


